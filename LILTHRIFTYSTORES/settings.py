"""
Django settings for LILTHRIFTYSTORES project.

Generated by 'django-admin startproject' using Django 2.2.27.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/

"""
import dj_database_url
import environ
from ctypes import cast
import os
from decouple import config
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
env = environ.Env()
environ.Env.read_env()
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

EMAIL_BACKEND = config('EMAIL_BACKEND')
EMAIL_HOST = config('EMAIL_HOST')
EMAIL_USE_TLS = config('EMAIL_USE_TLS')
EMAIL_PORT = config('EMAIL_PORT')
EMAIL_HOST_USER =config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD =config('EMAIL_HOST_PASSWORD')
RECAPTCHA_PRIVATE_KEY = config('RECAPTCHA_PRIVATE_KEY')
RECAPTCHA_PUBLIC_KEY = config('RECAPTCHA_PUBLIC_KEY')


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY =config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config('DEBUG', cast=bool)
CSRF_TRUSTED_ORIGINS = ["https://lilthriftyhub-production.up.railway.app"]

ALLOWED_HOSTS = ['lilthriftyhub-production.up.railway.app' ,'https://lilthriftyhub-production.up.railway.app ', '127.0.0.1',' https://e671-41-90-66-43.in.ngrok.io ']
# CSRF_TRUSTED_ORIGINS =

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'lilthriftyhub.apps.LilthriftyhubConfig',
    'plugmanager.apps.PlugmanagerConfig',
    'accounts.apps.AccountsConfig',
    'customer.apps.CustomerConfig',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware'
]

ROOT_URLCONF = 'LILTHRIFTYSTORES.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'plugmanager.template_context.get_filters',

            ],
        },
    },
]

WSGI_APPLICATION = 'LILTHRIFTYSTORES.wsgi.application'



# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases


if config('MODE') == 'dev':


    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.postgresql',
            'NAME': config("DATABASE_NAME"),
            'USER': config('DB_USER'),
            'PASSWORD': config('PASSWORD'),
            'HOST': config('HOST'),
        }
    }

elif config('MODE') == 'prod':
    DATABASES = {
            'default': dj_database_url.config(
                default=config('DATABASE_URL')
            )
    }

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Nairobi'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/




LOGIN_URL = "accounts:login"
LOGIN_REDIRECT_URL = "accounts:login"
LOGOUT_REDIRECT_URL = "/"



                                  

STATIC_URL = '/static/'

MEDIA_URL = '/media/' 

if DEBUG:

    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]

else:
    STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
    #   STATIC_ROOT = os.path.join(BASE_DIR, 'store statistics')

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
STATIC_ROOT = os.path.join(BASE_DIR, 'store statistics')

AUTH_USER_MODEL = "accounts.User"